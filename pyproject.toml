[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ocrpoc-spacy-layout"
version = "0.1.0"
description = "A proof of concept demonstrating the use of the spacy-layout library to convert PDFs into AI-ready structured data"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "accelerate>=1.10.0",
    "annotated-types>=0.7.0",
    "antlr4-python3-runtime",
    "attrs>=25.0.0",
    "beautifulsoup4>=4.12.0",
    "blis>=1.3.0",
    "catalogue>=2.0.0",
    "certifi>=2024.0.0",
    "charset-normalizer>=3.3.0",
    "click>=8.1.0",
    "cloudpathlib>=0.20.0",
    "colorlog>=6.8.0",
    "confection>=0.1.0",
    "cymem>=2.0.0",
    "dill>=0.3.0",
    "docling>=2.50.0",
    "docling-core>=2.40.0",
    "docling-ibm-models>=3.9.0",
    "docling-parse>=4.5.0",
    "et_xmlfile>=2.0.0",
    "filelock>=3.15.0",
    "filetype>=1.2.0",
    "fsspec>=2024.0.0",
    "hf-xet>=1.1.0",
    "huggingface-hub>=0.20.0",
    "idna>=3.7.0",
    "Jinja2>=3.1.0",
    "jsonlines>=3.1.0",
    "jsonref>=1.1.0",
    "jsonschema>=4.20.0",
    "jsonschema-specifications>=2023.0.0",
    "langcodes>=3.4.0",
    "language_data>=1.2.0",
    "latex2mathml>=3.77.0",
    "lxml>=5.0.0",
    "marisa-trie>=1.2.0",
    "markdown-it-py>=3.0.0",
    "marko>=2.0.0",
    "MarkupSafe>=2.1.0",
    "mdurl>=0.1.0",
    "mpire>=2.10.0",
    "mpmath>=1.3.0",
    "multiprocess>=0.70.0",
    "murmurhash>=1.0.0",
    "networkx>=3.2.0",
    "numpy>=1.26.0",
    "omegaconf>=2.3.0",
    "opencv-python>=4.8.0",
    "opencv-python-headless>=4.8.0",
    "openpyxl>=3.1.0",
    "packaging>=24.0.0",
    "pandas>=2.1.0",
    "pillow>=10.0.0",
    "pluggy>=1.5.0",
    "polyfactory>=2.15.0",
    "preshed>=3.0.0",
    "psutil>=5.9.0",
    "pyclipper>=1.3.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "pydantic_core>=2.14.0",
    "Pygments>=2.17.0",
    "pylatexenc>=2.10",
    "python-dateutil>=2.8.0",
    "python-docx>=1.1.0",
    "python-pptx>=0.6.0",
    "pytz>=2024.0.0",
    "PyYAML>=6.0.0",
    "rapidocr>=3.4.0",
    "referencing>=0.35.0",
    "rpds-py>=0.18.0",
    "rtree>=1.2.0",
    "safetensors>=0.4.0",
    "scipy>=1.12.0",
    "semchunk>=2.2.0",
    "setuptools>=70.0.0",
    "shapely>=2.0.0",
    "shellingham>=1.5.0",
    "six>=1.16.0",
    "smart_open>=7.0.0",
    "soupsieve>=2.5.0",
    "spacy>=3.8.0",
    "spacy-legacy>=3.0.0",
    "spacy-loggers>=1.0.0",
    "spacy_layout>=0.0.12",
    "srsly>=2.4.0",
    "sympy>=1.12.0",
    "tabulate>=0.9.0",
    "thinc>=8.2.0",
    "tokenizers>=0.15.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "tqdm>=4.66.0",
    "transformers>=4.35.0",
    "typer>=0.9.0",
    "typing-inspection>=0.4.0",
    "typing_extensions>=4.9.0",
    "tzdata>=2024.0.0",
    "urllib3>=2.2.0",
    "wasabi>=1.1.0",
    "weasel>=0.3.0",
    "wrapt>=1.16.0",
    "xlsxwriter>=3.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "black>=24.8.0",
    "flake8>=7.1.0",
    "bandit>=1.8.0",
    "pre-commit>=3.8.0"
]
macos = [
    "pyobjc-core>=11.1",
    "pyobjc-framework-Cocoa>=11.1",
    "pyobjc-framework-CoreML>=11.1",
    "pyobjc-framework-Quartz>=11.1",
    "pyobjc-framework-Vision>=11.1"
]

[tool.setuptools]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["."]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--junitxml=junit.xml",
    "-o",
    "junit_family=legacy",
    "--cov-fail-under=80"
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox"
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert checks and shell usage in controlled contexts